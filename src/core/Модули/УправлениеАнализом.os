#Использовать 1commands

Процедура ЗапуститьМассовыйАнализ(ПараметрыЗапуска) Экспорт
	
	ПараметрыЗапуска.Вставить("НаименованиеПроекта", ПараметрыЗапуска.КлючПроекта);
	
	ПараметрыПриложения.Логирование().Информация("Получаю список коммитов");
	
	КоммитыДляСканирования = СписокКоммитов(ПараметрыЗапуска.ПутьДоКаталогаПроекта, ПараметрыЗапуска.ДатаАнализа);
	КоличествоКоммитовКОбработке = КоммитыДляСканирования.Количество();
	ПараметрыПриложения.Логирование().Информация("Начинаю обработку коммитов. Всего к обработке : " + КоличествоКоммитовКОбработке);
	
	Для Индекс = 0 По КоличествоКоммитовКОбработке - 1 Цикл
		
		ТекущийКоммит = КоммитыДляСканирования[Индекс].Коммит;
		ТекущаяДатаКоммита = КоммитыДляСканирования[Индекс].КоммитДата;
		
		ПараметрыПриложения.Логирование().Информация("Переключаюсь на коммит : " + ТекущийКоммит + " от " + ТекущаяДатаКоммита);
		ГитЧекаут(ПараметрыЗапуска.ПутьДоКаталогаПроекта, ТекущийКоммит);
		
		ПараметрыПриложения.Логирование().Информация("Запускаю сканирование : " + СокрЛП(Индекс + 1) + "/" + КоличествоКоммитовКОбработке);
		
		ВыводСканера = СонарСканнер(ПараметрыЗапуска, ТекущаяДатаКоммита);
		
		ПараметрыПриложения.Логирование().Информация("Сканирование завершено");      
		ПараметрыПриложения.Логирование().Информация(ВыводСканера);
		ПараметрыПриложения.Логирование().Информация("Коммит " + ТекущийКоммит + " от " + ТекущаяДатаКоммита + " обработан.");
		ПараметрыПриложения.Логирование().Информация("Осталось еще обработать : " + (КоличествоКоммитовКОбработке - Индекс - 1));
		
	КонецЦикла;
КонецПроцедуры

Функция СписокКоммитов(КаталогРепозитария, ДатаПоследнегоАнализа)
	
	Лог = ГитЛог(КаталогРепозитария);	
	ПараметрыПриложения.Логирование().Отладка(Лог);
	
	КоммитыСДатами = СтрРазделить(Лог, Символы.ПС, Ложь);
	Коммиты = Новый ТаблицаЗначений();
	Коммиты.Колонки.Добавить("Коммит");
	Коммиты.Колонки.Добавить("КоммитДата");
	
	ПоследняяДатаКоммита = Дата(СтрЗаменить(ДатаПоследнегоАнализа, "-", ""));
	
	Для Каждого КоммитСДатой Из КоммитыСДатами Цикл
		ТекКоммитСДатой = СтрРазделить(КоммитСДатой, "|");
		ДатаКоммитаСтрокой = СокрЛП(ТекКоммитСДатой[1]);
		ДатаКоммита = Дата(ДатаКоммитаСтрокой);
		Если  ДатаКоммита > ПоследняяДатаКоммита Тогда
			ПоследняяДатаКоммита = ДатаКоммита;
			СтрокаТЗ = Коммиты.Добавить();
			СтрокаТЗ.Коммит = СокрЛП(ТекКоммитСДатой[0]);
			СтрокаТЗ.КоммитДата = Формат(ДатаКоммита, "ДФ=""гггг-ММ-дд""");            
		КонецЕсли;
	КонецЦикла;
	
	Возврат Коммиты;
КонецФункции

Процедура ГитЧекаут(КаталогРепозитория, ТекущийКоммит)
	КомандаЧекаут = Новый Команда();
	КомандаЧекаут.УстановитьКоманду("git");
	КомандаЧекаут.ПоказыватьВыводНемедленно(Ложь);
	КомандаЧекаут.ДобавитьПараметр("checkout");
	КомандаЧекаут.ДобавитьПараметр(ТекущийКоммит);
	КомандаЧекаут.УстановитьРабочийКаталог(КаталогРепозитория);
	КомандаЧекаут.Исполнить();
КонецПроцедуры

Функция ГитЛог(КаталогРепозитария)
	КомандаГит = Новый Команда();
	КомандаГит.УстановитьКоманду("git");
	КомандаГит.ДобавитьПараметр("log");
	КомандаГит.ДобавитьПараметр("--reverse");
	КомандаГит.ДобавитьПараметр("--pretty=format:""%h | %cd""");
	КомандаГит.ДобавитьПараметр("--date=format:%Y%m%d");
	КомандаГит.ДобавитьПараметр("--branches=""master*""");
	КомандаГит.УстановитьРабочийКаталог(КаталогРепозитария);
	КомандаГит.Исполнить();
	Возврат КомандаГит.ПолучитьВывод();
КонецФункции

Функция СонарСканнер(Параметры, ТекущаяДатаКоммита)
	КомандаСканера = Новый Команда();
	КомандаСканера.УстановитьКоманду("sonar-scanner"); // берем из PATH
	КомандаСканера.ПоказыватьВыводНемедленно(Ложь);
	КомандаСканера.ДобавитьПараметр("-Dsonar.login=" + Параметры.ТокенСонара);
	КомандаСканера.ДобавитьПараметр("-Dsonar.host.url=" + Параметры.АдресСонара);
	КомандаСканера.ДобавитьПараметр("-Dsonar.projectKey=" + Параметры.КлючПроекта);
	КомандаСканера.ДобавитьПараметр("-Dsonar.projectName=" + Параметры.НаименованиеПроекта);
	КомандаСканера.ДобавитьПараметр("-Dsonar.projectBaseDir=" + Параметры.ПутьДоКаталогаПроекта);
	КомандаСканера.ДобавитьПараметр("-Dsonar.sources=" + ОбъединитьПути(Параметры.ПутьДоКаталогаПроекта, Параметры.КаталогиИсходныхКодов));
	КомандаСканера.ДобавитьПараметр("-Dsonar.sourceEncoding=UTF-8");
	КомандаСканера.ДобавитьПараметр("-Dsonar.inclusions=**/*.bsl,**/*.os");
	КомандаСканера.ДобавитьПараметр("-Dsonar.scm.enabled=true");
	КомандаСканера.ДобавитьПараметр("-Dsonar.scm.provider=git");
	КомандаСканера.ДобавитьПараметр("-Dsonar.scm.exclusions.disabled=true");
	КомандаСканера.ДобавитьПараметр("-Dsonar.projectDate=" + ТекущаяДатаКоммита);
	КомандаСканера.ДобавитьПараметр("-Dsonar.projectVersion=" + "1.0");
	КомандаСканера.Исполнить();
	Возврат КомандаСканера.ПолучитьВывод();
КонецФункции